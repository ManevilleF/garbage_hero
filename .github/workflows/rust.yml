name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0 # CI builds from scratch
  CARGO_NET_GIT_FETCH_WITH_CLI: true

# This allows github actions ton cancel previous workflowson the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-stable-${{ hashFiles('**/Cargo.toml') }}
      - name: Install alsa udev and gtk
        shell: bash
        run: >
          sudo apt-get update;
          sudo apt-get install
          --no-install-recommends -y
          libasound2-dev
          libudev-dev
          libgtk-3-dev
        if: runner.os == 'Linux'
      - name: build
        run: cargo build --verbose
      - name: build with all features
        run: cargo build --all-features --verbose
      - name: build without default features
        run: cargo build --no-default-features --verbose

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: "rustfmt"
      - name: Check Formatting
        run: cargo fmt --all -- --check

  clippy:
    needs: [ build, fmt ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-clippy-stable-${{ hashFiles('**/Cargo.toml') }}
      - name: Install alsa udev and gtk
        shell: bash
        run: >
          sudo apt-get update;
          sudo apt-get install
          --no-install-recommends -y
          libasound2-dev
          libudev-dev
          libgtk-3-dev
        if: runner.os == 'Linux'
      - name: Run clippy default check
        run: cargo clippy --all --tests -- -D warnings
      - name: Run clippy all features check
        run: cargo clippy --all-features --all --tests -- -D warnings
      - name: Run clippy no default features check
        run: cargo clippy --no-default-features --all --tests -- -D warnings
